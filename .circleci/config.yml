version: 2
jobs:
  build:
    working_directory: /go/github.com/tarokamikaze/ci_selecting/
    # docker:
    # - image: docker:18.05.0-ce-git
    # - image: circleci/golang:1.11
    machine: true
    # image: circleci/golang:1.11
    steps:
    - run:
        name: mkdir
        command: sudo mkdir /go && sudo chown -R circleci:circleci /go
    - checkout
    # - restore_cache:
    #     key: vendor-{{ checksum "backend/glide.lock" }}
    # - restore_cache:
    #     key: docker-compose-1.22.0
    # - run:
    #     name: Install Docker Compose
    #     command: |
    #       if [ ! -e /usr/local/bin/docker-compose ]; then
    #         curl -L "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    #         chmod +x /usr/local/bin/docker-compose
    #       fi
    # - save_cache:
    #     key: docker-compose-1.22.0
    #     paths:
    #     - /usr/local/bin/docker-compose
    # - setup_remote_docker:
    #     version: 18.05.0-ce
    # - run: |
    #     if [[ $CIRCLE_SHELL_ENV =~ "localbuild" ]]; then
    #       sudo chown root /usr/bin/docker
    #       sudo chmod u+s /usr/bin/docker
    #     fi
    #     docker info
    - run:
        name: "building test runner"
        working_directory: infra/
        command: docker-compose -f docker-compose.test.yml build
    - run:
        name: "statup containers"
        working_directory: infra/
        command: docker-compose -f docker-compose.test.yml up -d
    - run:
        name: "running tests"
        working_directory: infra/
        command: |
          export COMPOSE_FILE=`pwd`/docker-compose.test.yml
          sh heavy-test.sh
    - store_artifacts:
        path: /tmp/test-result/cov.out
        destination: cov.out
